# -------------------
# # special functions
# -------------------

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
# custom open
cmd openf &{{	
	# arg can be [filepath] or [--fx]
	[ $# -eq 0 -o $# -ge 2 ] && exit 0
	case "$1" in
		--fx) args="$fx";;
		*)    args="$@" ;;
	esac
	
	for file in $args; do
		type="$(file --mime-type -Lb "$file")"
		
		# credential files
		if [[ "$file" == "$CREDENTIALS_DIR"/* && "$file" == *.enc && "$type" = application/octet-stream ]]; then
			file="$(realpath "$file")"
			lf -remote "send $id \$zsh -i -c 'mod-cred \"$file\"'"
			continue
		fi

		# Mangas
		MANGAS_DIR="$DOCUMENTS_DIR/Mangas"
		if [[ "$file" == *.(cbz|cbr|cb7|cbt) || "$file" == "$MANGAS_DIR"/*.pdf ]]; then
			echo "here 6 $file $type" >> /tmp/lf.log
			file="$(realpath "$file")"
			i3-msg "exec --no-startup-id mcomix \"$file\""
			continue
		fi
		
		if [[ "$file" = *.lua ]]; then
			lf -remote "send $id \$/usr/bin/nvim \"$file\""
			continue
		fi

 		case "$type" in
 			text/* | inode/x-empty | application/json | application/octet-stream)
				lf -remote "send $id \$/usr/bin/nvim \"$file\""
				;;
 			*)
				mimeopen -n "$file" >/dev/null 2>&1 &
				[ $? -eq 1 ] && lf -remote "send $id :echoerr openf:mimeopen: error" || true
				;;  # ditched the $OPENER cuz of -n
 		esac
	done
}}
cmd open &{{
	lf -remote "send $id :openf --fx"
}}
