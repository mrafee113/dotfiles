# use lf as filepicker
cmd filepicker-prompt :{{
	cmd setprompt &{{ lf -remote "send $id :set promptfmt \"\033[31;1mselect the file and press ALT+RETURN\033[0m\"" ; }}
}}
cmd filepicker-mode ${{
	lf -remote "send $id :filepicker-prompt; setprompt"
	lf -remote "send $id :set preview false"
	echo >| /tmp/lf.errlog
	err=""
	if [[ ! -v LF_FILEPICKER_FILE ]];  then err+="var LF_FILEPICKER_FILE is not set\n"
	elif [ -z "$LF_FILEPICKER_FILE" ]; then err+="var LF_FILEPICKER_FILE is empty\n"
	elif [ -f "$LF_FILEPICKER_FILE" -a ! -w "$LF_FILEPICKER_FILE" ]; then
		err+="file $LF_FILEPICKER_FILE is not writable\n"
	fi
	if [[ ! -v LF_FILEPICKER_WD ]];  then err+="var LF_FILEPICKER_WD is not set\n"
	elif [ -z "$LF_FILEPICKER_WD" ]; then err+="var LF_FILEPICKER_WD is empty\n"; fi

	if [ -n "$err" ]; then
		echo "$err" > /tmp/lf.errlog
		lf -remote "send $id quit"
		exit 1
	fi

	lf -remote "send $id :cd $LF_FILEPICKER_WD"
	lf -remote "send $id :echo select the file and press ALT+RETURN"
}}
cmd pick-file ${{
	[ ! -n "$f" ] && lf -remote "send $id :echoerr no file selected" && exit 1
	[ ! -f "$f" ] && lf -remote "send $id :echoerr not a file" && exit 1

	if [[ -v LF_FILEPICKER_SUFFIX ]]            && \
  	   [ -n "$LF_FILEPICKER_SUFFIX" ]           && \
       [[ ! "$f" = *"$LF_FILEPICKER_SUFFIX" ]]; then
		lf -remote "send $id :echoerr file does not end with '$LF_FILEPICKER_SUFFIX'"
		exit 1
	fi
	
	filetype="$(file --mime-type -Lb "$f")"
	if [[ -v LF_FILEPICKER_MIMETYPE ]]				  && \
	   [ -n "$LF_FILEPICKER_MIMETYPE" ]				  && \
	   [ ! "$filetype" = "$LF_FILEPICKER_MIMETYPE" ]; then
		lf -remote "send $id :echoerr wrong filetype: '$filetype' != '$LF_FILEPICKER_MIMETYPE'"
		exit 1
	fi

	echo "$f" > "$LF_FILEPICKER_FILE"
	lf -remote "send $id :quit"
}}
map <a-enter> :pick-file
